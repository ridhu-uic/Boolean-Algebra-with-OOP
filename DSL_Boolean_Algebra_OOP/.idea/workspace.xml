<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="61a073b8-6a79-4d3c-a892-a89a84e57587" name="Changes" comment="HW5 again">
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$90c967d4afcaa00da386$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$90c967d4afcaa00da386.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$90c967d4afcaa00da386.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/compile/compileIncremental/_global/streams/out" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/compile/compileIncremental/_global/streams/out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/compile/copyResources/_global/streams/out" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/compile/copyResources/_global/streams/out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/compile/incOptions/_global/streams/out" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/compile/incOptions/_global/streams/out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/bg-jobs/sbt_c6f52e25/job-1/target/72f3233a/44acba0f/booleanoperations_3-0.1.0-SNAPSHOT.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/booleanoperations_3-0.1.0-SNAPSHOT.jar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/classes/Sets_Classes.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-3.2.1/classes/Sets_Classes.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/classes/Sets_Classes.tasty" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-3.2.1/classes/Sets_Classes.tasty" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/classes/runIT.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-3.2.1/classes/runIT.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/classes/runIT.tasty" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-3.2.1/classes/runIT.tasty" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/test-classes/YourSetTheoryLanguageTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-3.2.1/test-classes/YourSetTheoryLanguageTest.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/test-classes/YourSetTheoryLanguageTest.tasty" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-3.2.1/test-classes/YourSetTheoryLanguageTest.tasty" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-3.2.1/zinc/inc_compile_3.zip" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-3.2.1/zinc/inc_compile_3.zip" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/_global/csrLogger/_global/streams/out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/_global/dumpStructure/_global/streams/out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/updateClassifiers/_global/streams/out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/updateClassifiers/_global/streams/update_cache_3/inputs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/updateClassifiers/_global/streams/update_cache_3/output" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/compile/compile/_global/streams/out" beforeDir="false" afterPath="$PROJECT_DIR$/target/streams/compile/compile/_global/streams/out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/compile/exportedProductJars/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/compile/mainClass/_global/streams/out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/compile/packageBin/_global/streams/inputs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/compile/packageBin/_global/streams/out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/compile/packageBin/_global/streams/output" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/dependencyClasspathAsJars/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/exportedProductJars/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/externalDependencyClasspath/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/fullClasspathAsJars/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/internalDependencyAsJars/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/internalDependencyAsJars/_global/streams/out" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/managedClasspath/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/unmanagedClasspath/_global/streams/export" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/runtime/unmanagedClasspath/_global/streams/out" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2IAHlLbgNRkCIIai0kqgfNCZQnd" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/rkungu2/Documents/Git 5/GIT CS 474 MG/Fall2022-CS474&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="ScalaTest.YourSetTheoryLanguageTest">
    <configuration name="YourSetTheoryLanguageTest" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="BooleanOperations" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="YourSetTheoryLanguageTest" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="YourSetTheoryLanguageTest.my first language for set theory operations should Using map for compound expressions" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="BooleanOperations" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="YourSetTheoryLanguageTest" />
      <option name="testName" value="my first language for set theory operations should Using map for compound expressions" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="YourSetTheoryLanguageTest.my first language for set theory operations should Using map for compund expressions" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="BooleanOperations" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="YourSetTheoryLanguageTest" />
      <option name="testName" value="my first language for set theory operations should Using map for compund expressions" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="YourSetTheoryLanguageTest.my first language for set theory operations should compute and assert the truth table of OR GATE" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="BooleanOperations" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="YourSetTheoryLanguageTest" />
      <option name="testName" value="my first language for set theory operations should compute and assert the truth table of OR GATE" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="YourSetTheoryLanguageTest.my first language for set theory operations should compute much more compound expressions&#10;my first language for set theory operations should compute compound expressions&#10;my first language for set theory operations should compute and assert the truth table of NAND GATE&#10;my first language for set theory operations should compute and assert the truth table of XNOR GATE&#10;my first language for set theory operations should compute and assert the truth table of OR GATE&#10;my first language for set theory operations should compute and assert the truth table of NOT GATE&#10;my first language for set theory operations should Using map for compound expressions&#10;my first language for set theory operations should Using map&#10;my first language for set theory operations should throw an exception because user did not define the exception&#10;my first language for set theory operations should Testing scope2&#10;my first language for set theory operations should Testing While&#10;my first language for set theory operations should Throw an error of misplaced if while Using IF ELSE IF and ELSE&#10;my first language for set theory operations should Using IF ELSE IF and ELSE&#10;my first language for set theory operations should Throw an exception because class does not override a method in the interface inherited by the implemented interface&#10;my first language for set theory operations should Create two interfaces and Implement it in a class&#10;my first language for set theory operations should Creates an interface&#10;my first language for set theory operations should Using the object created for the class which inherits a abstract class to call the override method&#10;my first language for set theory operations should Creating an object for the class which inherits a abstract class&#10;my first language for set theory operations should throw an Exception because object cannot be created for an abstract class&#10;my first language for set theory operations should Create an object for the class and call a method&#10;my first language for set theory operations should Create an object for the class&#10;my first language for set theory operations should inheriting a abstract class with abstract methods in Child Class&#10;my first language for set theory operations should inheriting a class with abstract methods, should throw an exception because the method is not defined in the derived class&#10;my first language for set theory operations should inheriting a class with abstract methods&#10;my first language for set theory operations should Create a class&#10;my first language for set theory operations should Create a new object for the class&#10;my first language for set theory operations should Using the object to setField&#10;my first language for set theory operations should create a gate to test the De Morgan's law&#10;my first language for set theory operations should Assign XOR gate expression to logicGate2&#10;my first language for set theory operations should abide by the De Morgan's law&#10;my first language for set theory operations should Testing Scope&#10;my first language for set theory operations should Testing Scope with XNOR, NOR and NAND" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="BooleanOperations" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="YourSetTheoryLanguageTest" />
      <option name="testName" value="my first language for set theory operations should compute much more compound expressions&#10;my first language for set theory operations should compute compound expressions&#10;my first language for set theory operations should compute and assert the truth table of NAND GATE&#10;my first language for set theory operations should compute and assert the truth table of XNOR GATE&#10;my first language for set theory operations should compute and assert the truth table of OR GATE&#10;my first language for set theory operations should compute and assert the truth table of NOT GATE&#10;my first language for set theory operations should Using map for compound expressions&#10;my first language for set theory operations should Using map&#10;my first language for set theory operations should throw an exception because user did not define the exception&#10;my first language for set theory operations should Testing scope2&#10;my first language for set theory operations should Testing While&#10;my first language for set theory operations should Throw an error of misplaced if while Using IF ELSE IF and ELSE&#10;my first language for set theory operations should Using IF ELSE IF and ELSE&#10;my first language for set theory operations should Throw an exception because class does not override a method in the interface inherited by the implemented interface&#10;my first language for set theory operations should Create two interfaces and Implement it in a class&#10;my first language for set theory operations should Creates an interface&#10;my first language for set theory operations should Using the object created for the class which inherits a abstract class to call the override method&#10;my first language for set theory operations should Creating an object for the class which inherits a abstract class&#10;my first language for set theory operations should throw an Exception because object cannot be created for an abstract class&#10;my first language for set theory operations should Create an object for the class and call a method&#10;my first language for set theory operations should Create an object for the class&#10;my first language for set theory operations should inheriting a abstract class with abstract methods in Child Class&#10;my first language for set theory operations should inheriting a class with abstract methods, should throw an exception because the method is not defined in the derived class&#10;my first language for set theory operations should inheriting a class with abstract methods&#10;my first language for set theory operations should Create a class&#10;my first language for set theory operations should Create a new object for the class&#10;my first language for set theory operations should Using the object to setField&#10;my first language for set theory operations should create a gate to test the De Morgan's law&#10;my first language for set theory operations should Assign XOR gate expression to logicGate2&#10;my first language for set theory operations should abide by the De Morgan's law&#10;my first language for set theory operations should Testing Scope&#10;my first language for set theory operations should Testing Scope with XNOR, NOR and NAND" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.YourSetTheoryLanguageTest" />
        <item itemvalue="ScalaTest.YourSetTheoryLanguageTest.my first language for set theory operations should compute much more compound expressions&#10;my first language for set theory operations should compute compound expressions&#10;my first language for set theory operations should compute and assert the truth table of NAND GATE&#10;my first language for set theory operations should compute and assert the truth table of XNOR GATE&#10;my first language for set theory operations should compute and assert the truth table of OR GATE&#10;my first language for set theory operations should compute and assert the truth table of NOT GATE&#10;my first language for set theory operations should Using map for compound expressions&#10;my first language for set theory operations should Using map&#10;my first language for set theory operations should throw an exception because user did not define the exception&#10;my first language for set theory operations should Testing scope2&#10;my first language for set theory operations should Testing While&#10;my first language for set theory operations should Throw an error of misplaced if while Using IF ELSE IF and ELSE&#10;my first language for set theory operations should Using IF ELSE IF and ELSE&#10;my first language for set theory operations should Throw an exception because class does not override a method in the interface inherited by the implemented interface&#10;my first language for set theory operations should Create two interfaces and Implement it in a class&#10;my first language for set theory operations should Creates an interface&#10;my first language for set theory operations should Using the object created for the class which inherits a abstract class to call the override method&#10;my first language for set theory operations should Creating an object for the class which inherits a abstract class&#10;my first language for set theory operations should throw an Exception because object cannot be created for an abstract class&#10;my first language for set theory operations should Create an object for the class and call a method&#10;my first language for set theory operations should Create an object for the class&#10;my first language for set theory operations should inheriting a abstract class with abstract methods in Child Class&#10;my first language for set theory operations should inheriting a class with abstract methods, should throw an exception because the method is not defined in the derived class&#10;my first language for set theory operations should inheriting a class with abstract methods&#10;my first language for set theory operations should Create a class&#10;my first language for set theory operations should Create a new object for the class&#10;my first language for set theory operations should Using the object to setField&#10;my first language for set theory operations should create a gate to test the De Morgan's law&#10;my first language for set theory operations should Assign XOR gate expression to logicGate2&#10;my first language for set theory operations should abide by the De Morgan's law&#10;my first language for set theory operations should Testing Scope&#10;my first language for set theory operations should Testing Scope with XNOR, NOR and NAND" />
        <item itemvalue="ScalaTest.YourSetTheoryLanguageTest.my first language for set theory operations should compute and assert the truth table of OR GATE" />
        <item itemvalue="ScalaTest.YourSetTheoryLanguageTest.my first language for set theory operations should Using map for compound expressions" />
        <item itemvalue="ScalaTest.YourSetTheoryLanguageTest.my first language for set theory operations should Using map for compund expressions" />
      </list>
    </recent_temporary>
  </component>
  <component name="ScalaProjectSettings">
    <option name="scala3DisclaimerShown" value="true" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="61a073b8-6a79-4d3c-a892-a89a84e57587" name="Changes" comment="" />
      <created>1669617619599</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1669617619599</updated>
      <workItem from="1669617621487" duration="2742000" />
      <workItem from="1670003024218" duration="770000" />
      <workItem from="1670677597987" duration="9707000" />
    </task>
    <task id="LOCAL-00001" summary="HW5 again">
      <created>1670690634302</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1670690634302</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="HW5 again" />
    <option name="LAST_COMMIT_MESSAGE" value="HW5 again" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/test/scala/YourSetTheoryLanguageTest.scala</url>
          <line>6</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/main/scala/Sets_Classes.scala</url>
          <line>400</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="scala-line">
          <url>file://$PROJECT_DIR$/src/test/scala/YourSetTheoryLanguageTest.scala</url>
          <line>7</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>