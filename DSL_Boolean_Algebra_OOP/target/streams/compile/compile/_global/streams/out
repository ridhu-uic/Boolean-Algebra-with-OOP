[0m[[0m[33mwarn[0m] [0m[0m[33m[33m-- [E029] Pattern Match Exhaustivity Warning: C:\Users\rkungu2\Documents\Git 5\newdir\CS-474-\DSL_Boolean_Algebra_OOP\src\main\scala\Sets_Classes.scala:193:36 [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m193 |[0m    ([36moperator[0m:[35mBooleanExpression[0m) => operator [33mmatch[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m    |[0m                                    ^^^^^^^^[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[33mmatch[0m may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0mIt would fail on pattern case: BooleanExpression.get_Field(_), BooleanExpression.set_Field(_, _), BooleanExpression.invokeMethod(_, _), BooleanExpression.setParameter(_, _), BooleanExpression.getParameter(_), BooleanExpression.Field(_, _, _)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m(More unmatched cases are elided)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m longer explanation available when compiling with `-explain`[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m-- [E121] Pattern Match Warning: C:\Users\rkungu2\Documents\Git 5\newdir\CS-474-\DSL_Boolean_Algebra_OOP\src\main\scala\Sets_Classes.scala:214:15 [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m214 |[0m          [33mcase[0m _ => [33mthrow[0m [33mnew[0m Exception([31m"incorrect expression"[0m)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m    |[0m               ^[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0mUnreachable case except for [31mnull[0m (if this is intentional, consider writing [33mcase[0m [31mnull[0m => instead).[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m-- [E029] Pattern Match Exhaustivity Warning: C:\Users\rkungu2\Documents\Git 5\newdir\CS-474-\DSL_Boolean_Algebra_OOP\src\main\scala\Sets_Classes.scala:204:32 [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m204 |[0m    ([36mor[0m : [35mBooleanExpression[0m) => or [33mmatch[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m    |[0m                                ^^[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[33mmatch[0m may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0mIt would fail on pattern case: BooleanExpression.get_Field(_), BooleanExpression.set_Field(_, _), BooleanExpression.invokeMethod(_, _), BooleanExpression.setParameter(_, _), BooleanExpression.getParameter(_), BooleanExpression.Field(_, _, _)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m(More unmatched cases are elided)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m longer explanation available when compiling with `-explain`[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m-- [E029] Pattern Match Exhaustivity Warning: C:\Users\rkungu2\Documents\Git 5\newdir\CS-474-\DSL_Boolean_Algebra_OOP\src\main\scala\Sets_Classes.scala:279:31 [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m279 |[0m    ([36mor[0m: [35mBooleanExpression[0m) => or [33mmatch[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m    |[0m                               ^^[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[33mmatch[0m may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0mIt would fail on pattern case: BooleanExpression.get_Field(_), BooleanExpression.set_Field(_, _), BooleanExpression.invokeMethod(_, _), BooleanExpression.setParameter(_, _), BooleanExpression.getParameter(_), BooleanExpression.Field(_, _, _)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m(More unmatched cases are elided)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m    |[0m longer explanation available when compiling with `-explain`[0m
[0m[[0m[33mwarn[0m] [0m[0mfour warnings found[0m
